public class Window {




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































	public void show() {
		if (registrationEntry == null) {
			registrationEntry = container.register(this);
		}
	}

	public void dispose() {
		if (registrationEntry != null && registrationEntry.isRegistered()) {
			registrationEntry.unregister();
			registrationEntry = null;
		}
	}











	public HandlerRegistration addCloseClickHandler(final CloseClickHandler handler) {
		closeClickHandlers.add(handler);
		return new com.google.web.bindery.event.shared.HandlerRegistration() {
			@Override
			public void removeHandler() {
				closeClickHandlers.remove(handler);
			}
		};
	}






	public void paintContent(PaintTarget target) throws PaintException {
		propertyPainter.paintContent(target);

		if (!closeClickHandlers.isEmpty()) {
			target.addAttribute("*hasCloseClickHandlers", true);
		}

		super.paintContent(target);
	}


	public void changeVariables(Object source, Map<String, Object> variables) {
		super.changeVariables(source, variables);
		if (variables.containsKey("destroyed")) {
			dispose();
		}

		if (variables.containsKey("onCloseClick")) {
			final CloseClickEvent event = new CloseClickEvent();

			for (CloseClickHandler handler : closeClickHandlers) {
				handler.onCloseClick(event);
			}
		}
	}
}
